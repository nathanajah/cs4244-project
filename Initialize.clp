(defrule initialize-modules
    (declare (salience 10000))
    =>
    (make-instance [CS4244] of MODULE (module-code CS4242) (chain-length 1) (semesters 1))
    (make-instance [CS1] of MODULE (module-code CS1) (chain-length 2) (semesters 1 2))
    (make-instance [CS2] of MODULE (module-code CS2) (chain-length 1) (semesters 1 2))
    (make-instance [CS3] of MODULE (module-code CS3) (chain-length 0) (semesters 1 2))
    (make-instance [CS4] of MODULE (module-code CS4) (chain-length 2) (semesters 1 2))
    (make-instance [CS5] of MODULE (module-code CS5) (chain-length 1) (semesters 1 2))
    (make-instance [CS6] of MODULE (module-code CS6) (chain-length 0) (semesters 1 2))
    (make-instance [CS7] of MODULE (module-code CS7) (chain-length 0) (semesters 1 2))
    (make-instance [CS8] of MODULE (module-code CS8) (chain-length 0) (semesters 1 2))
    (make-instance [CS9] of MODULE (module-code CS9) (chain-length 0) (semesters 1 2))
    (make-instance [UE1] of MODULE (module-code UE1) (chain-length 0) (is-ue YES) (semesters 1 2))
    (make-instance [UE2] of MODULE (module-code UE2) (chain-length 0) (is-ue YES) (semesters 1 2))
    (make-instance [UE3] of MODULE (module-code UE3) (chain-length 0) (is-ue YES) (semesters 1 2))

    (make-instance of MODULE_STATUS (module-code CS4242) (status candidate))
    (make-instance of MODULE_STATUS (module-code CS2) (status candidate))
    (make-instance of MODULE_STATUS (module-code CS3) (status candidate))
    (make-instance of MODULE_STATUS (module-code CS1) (status candidate))
    (make-instance of MODULE_STATUS (module-code CS4) (status candidate))
    (make-instance of MODULE_STATUS (module-code CS5) (status candidate))
    (make-instance of MODULE_STATUS (module-code CS6) (status candidate))
    (make-instance of MODULE_STATUS (module-code CS7) (status candidate))
    (make-instance of MODULE_STATUS (module-code CS8) (status candidate))
    (make-instance of MODULE_STATUS (module-code CS9) (status candidate))
    (make-instance of MODULE_STATUS (module-code UE1) (status candidate))

    (assert (MODULE_PREREQUISITES (module-code CS4242) (prerequisites CS1)))
    (assert (MODULE_PREREQUISITES (module-code CS4242) (prerequisites CS2)))
    (assert (MODULE_PREREQUISITES (module-code CS5) (prerequisites CS1 CS2)))
    (assert (MODULE_PREREQUISITES (module-code CS5) (prerequisites CS3)))

    (assert (TIMETABLE_SLOT (module-code CS4242) (timings fri-4 fri-5)))
    (assert (TIMETABLE_SLOT (module-code CS1) (timings mon-1 mon-2 fri-10 fri-11)))
    (assert (TIMETABLE_SLOT (module-code CS2) (timings fri-9 fri-10)))
    (assert (TIMETABLE_SLOT (module-code CS3) (timings tues-9 tues-10)))
    (assert (TIMETABLE_SLOT (module-code CS4) (timings wed-9 wed-10)))
    (assert (TIMETABLE_SLOT (module-code CS5) (timings thurs-9 thurs-10)))
    (assert (TIMETABLE_SLOT (module-code CS6) (timings fri-9 fri-10)))
    (assert (TIMETABLE_SLOT (module-code CS6) (timings mon-5 mon-6)))
    (assert (TIMETABLE_SLOT (module-code CS7) (timings fri-8 fri-9)))
    (assert (TIMETABLE_SLOT (module-code CS7) (timings mon-8 mon-9)))
    (assert (TIMETABLE_SLOT (module-code CS8) (timings wed-1 wed-2)))
    (assert (TIMETABLE_SLOT (module-code CS9) (timings thurs-1 thurs-2 thurs-3))))

(defglobal ?*current-semester* = (make-instance [sem] of SEMESTER (max-semester-number 3)))